
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.ПоказыватьБезОписания = Ложь Тогда
		Элементы.Функции.ОтборСтрок = Новый ФиксированнаяСтруктура("ЕстьОписание", Истина);
	КонецЕсли;
	Элементы.Файлы.ОтборСтрок = Новый ФиксированнаяСтруктура("Разные", Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьБезОписанияПриИзменении(Элемент)
	
	текДанные = Элементы.Файлы.ТекущиеДанные;
	Если текДанные = Неопределено Тогда
		Если Объект.ПоказыватьБезОписания = Ложь Тогда
			Элементы.Функции.ОтборСтрок = Новый ФиксированнаяСтруктура("ЕстьОписание", Истина);
		Иначе
			Элементы.Функции.ОтборСтрок = Неопределено;
		КонецЕсли;
	Иначе
		Если Объект.ПоказыватьБезОписания = Ложь Тогда
			Элементы.Функции.ОтборСтрок = Новый ФиксированнаяСтруктура("ЕстьОписание,Файл", Истина, текДанные.Файл);
		Иначе
			Элементы.Функции.ОтборСтрок = Новый ФиксированнаяСтруктура("Файл", текДанные.Файл);
		КонецЕсли;
	КонецЕсли;
	
	ПересчитатьРазницы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораКаталога(ВыбранныеФайлы, ИмяРеквизита) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект[ИмяРеквизита] = ВыбранныеФайлы[0];
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКаталог(ИмяРеквизита)
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Диалог.Каталог						= Объект[ИмяРеквизита];
	Диалог.МножественныйВыбор			= Ложь;
	Диалог.ПроверятьСуществованиеФайла	= Истина;
	Диалог.Показать(Новый ОписаниеОповещения("ПослеВыбораКаталога"
						, ЭтаФорма
						, ИмяРеквизита)
	);
КонецПроцедуры

&НаКлиенте
Процедура ПапкаДампов1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ВыбратьКаталог("ПапкаДампов1");
КонецПроцедуры

&НаКлиенте
Процедура ПапкаДампов2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ВыбратьКаталог("ПапкаДампов2");
КонецПроцедуры

&НаКлиенте
Процедура ПутьКСтартеруНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ВыбратьКаталог("ПутьКСтартеру");
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗавершенияТрейса(КодВозврата, допПарам) Экспорт
	
	Прочитать(Null);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеСогласияЗапускТрейса(резВыбор, СтрокаЗапуска) Экспорт
	
	Если Не резВыбор = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	НачатьЗапускПриложения(Новый ОписаниеОповещения("ПослеЗавершенияТрейса"
								, ЭтаФорма)
							, СтрокаЗапуска
							,
							, Истина
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПроверкиНаличияСтартера(Существует, СтрокаЗапуска) Экспорт
	
	Если Не Существует Тогда
		ПоказатьПредупреждение(, СтрШаблон("Файл <%1> не найден", СтрокаЗапуска));
		Возврат;
	КонецЕсли;
	
	СтрокаЗапуска = СтрокаЗапуска + " -sntrace";
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ПослеСогласияЗапускТрейса"
								, ЭтаФорма
								, СтрокаЗапуска)
					, "Хотите запустить стартер с трейсом ?"
					, РежимДиалогаВопрос.ДаНет
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКСтартеруОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтрокаЗапуска = Объект.ПутьКСтартеру + "\" + "starter.exe";
	
	Файл = Новый Файл(СтрокаЗапуска);
	Файл.НачатьПроверкуСуществования(Новый ОписаниеОповещения("ПослеПроверкиНаличияСтартера", ЭтаФорма, СтрокаЗапуска));
	
КонецПроцедуры

&НаКлиенте
Функция ДанныеФайла(ИмяФайла)
	
	стрЗаголовок	= "";
	масФункции		= Новый Массив;
	
	т1 = Новый ЧтениеТекста(ИмяФайла);
	ВесьТекст = т1.Прочитать();
	масСтрок = СтрРазделить(ВесьТекст, Символы.ПС, Ложь);
	
	Для нн = 0 По масСтрок.Количество()-1 Цикл
		
		текСтр = СокрЛП(масСтрок.Получить(нн));
		
		Если Лев(текСтр, 5) = "-----" Тогда
			Прервать;
		КонецЕсли;
		
		Если СтрНачинаетсяС(текСтр, "Vtable address") или СтрНачинаетсяС(текСтр, "Offset in module:") Тогда
			Продолжить;
		КонецЕсли;
		 
		стрЗаголовок = ?(ПустаяСтрока(стрЗаголовок), текСтр, стрЗаголовок + Символы.ПС + текСтр);
		
	КонецЦикла;
	
	//функции
	номерФункции	= 0;
	описаниеФункции	= "";
	текстФункции	= "";
	квоСтрок		= 0;
	
	Для кк = нн+1 По масСтрок.Количество()-1 Цикл
		
		текСтр = масСтрок.Получить(кк);
		
		Если СтрНачинаетсяС(СокрЛП(текСтр), "Function ") Тогда
			лПоз = СтрНайти(текСтр, "Function ");
			текСтр2 = Сред(текСтр, лПоз + 9);
			лПоз = СтрНайти(текСтр2, " ");
			номерФункции = Число(Лев(текСтр2, лПоз));
			описаниеФункции = СокрЛП(Сред(текСтр2, лПоз));
			Продолжить;
		КонецЕсли;
		
		Если СтрНачинаетсяС(СокрЛП(текСтр), "address is") Тогда
			Продолжить;
		КонецЕсли;
		
		//НЕХ убрать
		Если СтрНачинаетсяС(текСтр, "     ") Тогда
			текСтр = Сред(текСтр, 29);
			текстФункции = ?(ПустаяСтрока(текстФункции), текСтр, текстФункции + Символы.ПС + текСтр);
			квоСтрок = квоСтрок + 1;
		КонецЕсли;
		
		Если Лев(текСтр, 5) = "-----" Тогда
			масФункции.Добавить(Новый Структура("Номер, Описание, Текст, квоСтрок"
												, номерФункции
												, описаниеФункции
												, текстФункции
												, квоСтрок
								)
			);
			описаниеФункции	= "";
			текстФункции	= "";
			квоСтрок		= 0;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не квоСтрок = 0 Тогда
		масФункции.Добавить(Новый Структура("Номер, Описание, Текст, КвоСтрок"
												, номерФункции
												, описаниеФункции
												, текстФункции
												, квоСтрок
								)
		);
	КонецЕсли;
	
	Возврат Новый Структура("Заголовок, Функции", стрЗаголовок, масФункции);
	
КонецФункции

&НаКлиенте
Процедура ПересчитатьРазницы()
	
	КвоФайлов = Объект.Файлы.Количество();
	текПозФайл = 0;
	//тут надо бы с количествами красиво придумать, пока просто что-то
	Для Каждого новСтрФайл Из Объект.Файлы Цикл
		
		текПозФайл=текПозФайл+1;
		Состояние("Сравнение файлов", текПозФайл * 100 / КвоФайлов, новСтрФайл.Файл);
		
		Если Не Объект.ПоказыватьБезОписания Тогда
			масСтрок = Объект.Функции.НайтиСтроки(Новый Структура("Файл, ЕстьОписание"
									, новСтрФайл.Файл
									, Истина
									)
			);
		Иначе
			масСтрок = Объект.Функции.НайтиСтроки(Новый Структура("Файл"
									, новСтрФайл.Файл
									)
			);
		КонецЕсли;
		
		новСтрФайл.Дельта = 0;
		
		Для Каждого стрФунк Из масСтрок Цикл
			Если Не Объект.ПоказыватьБезОписания
				И ПустаяСтрока(стрФунк.Описание1)
				И ПустаяСтрока(стрФунк.Описание2) Тогда
				Продолжить;
			КонецЕсли;
			Если Не стрФунк.Описание1 = стрФунк.Описание2 Тогда
				стрФунк.Разные		= Истина;
				стрФунк.Процент		= стрФунк.Процент + 0.1;
				новСтрФайл.Дельта	= новСтрФайл.Дельта + 1;
			КонецЕсли;
			Если Не стрФунк.КвоСтрок1 = стрФунк.КвоСтрок2 Тогда
				//TODO:Сделать сравнение текстов бы ещё
				//стрФунк.Разные 	= Истина;
				//стрФунк.Процент	= стрФунк.Процент + 0.01;
				//новСтрФайл.Дельта	= новСтрФайл.Дельта + 1;
			КонецЕсли;
		КонецЦикла;
		
		новСтрФайл.Разные = Не (новСтрФайл.Дельта = 0);
		
	КонецЦикла;
	
	Состояние();
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьФайлы(соотвФайлы)
	
	Объект.Файлы.Очистить();
	Объект.Функции.Очистить();
	
	КвоФайлов = соотвФайлы.Количество();
	текПозФайл = 0;
	
	Для Каждого КиЗ Из соотвФайлы Цикл
		
		новСтрФайл = Объект.Файлы.Добавить();
		новСтрФайл.Файл = КиЗ.Ключ;
		
		текПозФайл=текПозФайл+1;
		Состояние("Загрузка файла", текПозФайл * 100 / КвоФайлов, новСтрФайл.Файл);
		
		данные1 = ДанныеФайла(СтрШаблон("%1\%2.vtable", Объект.ПапкаДампов1, новСтрФайл.Файл));
		данные2 = ДанныеФайла(СтрШаблон("%1\%2.vtable", Объект.ПапкаДампов2, новСтрФайл.Файл));
		
		новСтрФайл.Заголовок1 = данные1.Заголовок;
		новСтрФайл.Заголовок2 = данные2.Заголовок;
		
		Для Каждого элем Из данные1.Функции Цикл
			новСтрФунк = Объект.Функции.Добавить();
			новСтрФунк.Файл			= новСтрФайл.Файл;
			новСтрФунк.Номер1 		= элем.Номер;
			новСтрФунк.Описание1	= элем.Описание;
			новСтрФунк.Текст1		= элем.Текст;
			новСтрФунк.ЕстьОписание = Не ПустаяСтрока(элем.Описание);
			новСтрФунк.КвоСтрок1	= элем.КвоСтрок;
		КонецЦикла;
		
		Для Каждого элем Из данные2.Функции Цикл
			мас2 = Объект.Функции.НайтиСтроки(Новый Структура("Файл, Номер1", КиЗ.Ключ, элем.Номер));
			Если мас2.Количество() = 0 Тогда
				новСтрФунк = Объект.Функции.Добавить();
				новСтрФунк.Файл			= новСтрФайл.Файл;
				новСтрФунк.Номер1		= элем.Номер;
			Иначе
				новСтрФунк = мас2[0];
			КонецЕсли;
			новСтрФунк.Номер2 		= элем.Номер;
			новСтрФунк.Описание2	= элем.Описание;
			новСтрФунк.Текст2		= элем.Текст;
			новСтрФунк.ЕстьОписание = новСтрФунк.ЕстьОписание ИЛИ Не ПустаяСтрока(элем.Описание);
			новСтрФунк.КвоСтрок2	= элем.КвоСтрок;
		КонецЦикла;
		
	КонецЦикла;
	
	Состояние();
	
	ПересчитатьРазницы();
	
	Объект.Файлы.Сортировать("Файл");
	
	ПоказатьПредупреждение(,"Чтение окончено");
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиФайлыОкончание(НайденныеФайлы2, НайденныеФайлы1) Экспорт
	
	Если НайденныеФайлы2.Количество() = 0 Тогда
		Сообщить("Не найдены файлы в папке дампов 2");
		Возврат;
	КонецЕсли;
	
	список1 = Новый Соответствие;
	общийСписок = Новый Соответствие;
	
	Для Каждого нФайл Из НайденныеФайлы1 Цикл
		список1.Вставить(нФайл.ИмяБезРасширения, 1);
	КонецЦикла;
	Для Каждого нФайл Из НайденныеФайлы2 Цикл
		Если список1.Получить(нФайл.ИмяБезРасширения) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		общийСписок.Вставить(нФайл.ИмяБезРасширения,1);
	КонецЦикла;
	
	ПрочитатьФайлы(общийСписок);
	
КонецПроцедуры
	
&НаКлиенте
Процедура НайтиФайлыНачало2(НайденныеФайлы, допПарам) Экспорт
	
	Если НайденныеФайлы.Количество() = 0 Тогда
		Сообщить("Не найдены файлы в папке дампов 1");
		Возврат;
	КонецЕсли;
	
	НачатьПоискФайлов(Новый ОписаниеОповещения("НайтиФайлыОкончание", ЭтаФорма, НайденныеФайлы)
						, Объект.ПапкаДампов2
						, "*.vtable"
						, Ложь
	);
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиФайлыНачало()
	
	НачатьПоискФайлов(Новый ОписаниеОповещения("НайтиФайлыНачало2", ЭтаФорма)
						, Объект.ПапкаДампов1
						, "*.vtable"
						, Ложь
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаПапки2(Существует, допПарам) Экспорт
	
	Если Не Существует Тогда
		Сообщить("Не найден каталог дампов 2");
		Возврат;
	КонецЕсли;
	
	НайтиФайлыНачало();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаПапки1(Существует, допПарам) Экспорт
	
	Если Не Существует Тогда
		Сообщить("Не найден каталог дампов 1");
		Возврат;
	КонецЕсли;
	
	Файл = Новый Файл(Объект.ПапкаДампов2);
	Файл.НачатьПроверкуСуществования(Новый ОписаниеОповещения("ПроверкаПапки2", ЭтаФорма));
	
КонецПроцедуры

&НаКлиенте
Процедура Прочитать(Команда)
	
	Если ПустаяСтрока(Объект.ПапкаДампов1) или ПустаяСтрока(Объект.ПапкаДампов2) Тогда
		Сообщить("Для чтения надо выбрать 2 папки дампов");
		Возврат;
	Иначе
		Если СокрЛП(Объект.ПапкаДампов1) = СокрЛП(Объект.ПапкаДампов2) Тогда
			Сообщить("Папки дампов должны различаться");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Файл = Новый Файл(Объект.ПапкаДампов1);
	Файл.НачатьПроверкуСуществования(Новый ОписаниеОповещения("ПроверкаПапки1", ЭтаФорма));
	
КонецПроцедуры


&НаКлиенте
Процедура ФайлыПриАктивизацииСтроки(Элемент)
	
	текДанные = Элементы.Файлы.ТекущиеДанные;
	Если текДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ПоказыватьБезОписания = Ложь Тогда
		Элементы.Функции.ОтборСтрок = Новый ФиксированнаяСтруктура("ЕстьОписание,Файл", Истина, текДанные.Файл);
	Иначе
		Элементы.Функции.ОтборСтрок = Новый ФиксированнаяСтруктура("Файл", текДанные.Файл);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыТолькоСИзменениями(Команда)
	Элементы.ФайлыТолькоСИзменениями.Пометка = Не Элементы.ФайлыТолькоСИзменениями.Пометка;
	Если Элементы.ФайлыТолькоСИзменениями.Пометка Тогда
		Элементы.Файлы.ОтборСтрок = Новый ФиксированнаяСтруктура("Разные", Истина);
	Иначе
		Элементы.Файлы.ОтборСтрок = Новый ФиксированнаяСтруктура();
	КонецЕсли;
КонецПроцедуры



